#include <iostream>
#include <vector>
using namespace std;

int n, m;
vector<vector<int>> a;
vector<vector<int>> vis;


int dr[4] = {-1, 1, 0, 0};
int dc[4] = {0, 0, -1, 1};


void dfs(int r, int c) {
    vis[r][c] = 1;
    for (int i = 0; i < 4; i++) {
        int nr = r + dr[i];
        int nc = c + dc[i];
        if (nr >= 0 && nc >= 0 && nr < n && nc < m && !vis[nr][nc] && a[nr][nc] == 1) {
            dfs(nr, nc);
        }
    }
}

int main() {
    cin >> n >> m;

    a.resize(n, vector<int>(m));
    vis.resize(n, vector<int>(m, 0));

    
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            cin >> a[i][j];

    int ponds = 0;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (a[i][j] == 1 && !vis[i][j]) {
                dfs(i, j);
                ponds++;
            }
        }
    }

    cout << ponds << endl;
    return 0;
}
